{"ast":null,"code":"var _jsxFileName = \"/home/irlanreis/trybe-conte\\xFAdos/Front-End/Se\\xE7\\xE3o-9-Context_API-e-React_Hooks/Dia-01-React_Hooks-useState-e-useEffect/trybemail/src/components/List.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { READ, UNREAD } from '../constants';\nimport read from '../icons/read.svg';\nimport unread from '../icons/unread.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List(_ref) {\n  let {\n    messages,\n    setMessageStatus\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"messages-list\",\n    children: messages.map(message => {\n      const messageClass = message.status === READ ? \"message-read\" : \"message-unread\";\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: `${messageClass}`,\n          children: message.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            title: \"Marcar como lida\",\n            onClick: () => setMessageStatus(message.id, READ),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: read,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            title: \"Marcar como n\\xE3o lida\",\n            onClick: () => setMessageStatus(message.id, UNREAD),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: unread,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = List;\nList.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    status: PropTypes.string\n  })).isRequired\n};\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","PropTypes","READ","UNREAD","read","unread","List","messages","setMessageStatus","map","message","messageClass","status","title","id","propTypes","arrayOf","shape","number","string","isRequired"],"sources":["/home/irlanreis/trybe-conteúdos/Front-End/Seção-9-Context_API-e-React_Hooks/Dia-01-React_Hooks-useState-e-useEffect/trybemail/src/components/List.jsx"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { READ, UNREAD } from '../constants';\nimport read from '../icons/read.svg';\nimport unread from '../icons/unread.svg';\n\nfunction List({ messages, setMessageStatus }) {\n  return (\n    <ul className=\"messages-list\">\n      {messages.map((message) => {\n        const messageClass = message.status === READ\n          ? \"message-read\" : \"message-unread\";\n\n        return (\n          <li key={message.id}>\n            <p className={`${messageClass}`}>\n              { message.title }\n            </p>\n            <div>\n              <button\n                type=\"button\"\n                title=\"Marcar como lida\"\n                onClick={ () => setMessageStatus(message.id, READ) }\n              >\n                <img src={ read } alt=\"\" />\n              </button>\n              <button\n                type=\"button\"\n                title=\"Marcar como não lida\"\n                onClick={ () => setMessageStatus(message.id, UNREAD) }\n              >\n                <img src={ unread } alt=\"\" /> \n              </button>\n            </div>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nList.propTypes = {\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      status: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default List;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,EAAEC,MAAM,QAAQ,cAAc;AAC3C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAEzC,SAASC,IAAI,OAAiC;EAAA,IAAhC;IAAEC,QAAQ;IAAEC;EAAiB,CAAC;EAC1C,oBACE;IAAI,SAAS,EAAC,eAAe;IAAA,UAC1BD,QAAQ,CAACE,GAAG,CAAEC,OAAO,IAAK;MACzB,MAAMC,YAAY,GAAGD,OAAO,CAACE,MAAM,KAAKV,IAAI,GACxC,cAAc,GAAG,gBAAgB;MAErC,oBACE;QAAA,wBACE;UAAG,SAAS,EAAG,GAAES,YAAa,EAAE;UAAA,UAC5BD,OAAO,CAACG;QAAK;UAAA;UAAA;UAAA;QAAA,QACb,eACJ;UAAA,wBACE;YACE,IAAI,EAAC,QAAQ;YACb,KAAK,EAAC,kBAAkB;YACxB,OAAO,EAAG,MAAML,gBAAgB,CAACE,OAAO,CAACI,EAAE,EAAEZ,IAAI,CAAG;YAAA,uBAEpD;cAAK,GAAG,EAAGE,IAAM;cAAC,GAAG,EAAC;YAAE;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QACpB,eACT;YACE,IAAI,EAAC,QAAQ;YACb,KAAK,EAAC,yBAAsB;YAC5B,OAAO,EAAG,MAAMI,gBAAgB,CAACE,OAAO,CAACI,EAAE,EAAEX,MAAM,CAAG;YAAA,uBAEtD;cAAK,GAAG,EAAGE,MAAQ;cAAC,GAAG,EAAC;YAAE;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QACtB;QAAA;UAAA;UAAA;UAAA;QAAA,QACL;MAAA,GAnBCK,OAAO,CAACI,EAAE;QAAA;QAAA;QAAA;MAAA,QAoBd;IAET,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACC;AAET;AAAC,KAjCQR,IAAI;AAmCbA,IAAI,CAACS,SAAS,GAAG;EACfR,QAAQ,EAAEN,SAAS,CAACe,OAAO,CACzBf,SAAS,CAACgB,KAAK,CAAC;IACdH,EAAE,EAAEb,SAAS,CAACiB,MAAM;IACpBL,KAAK,EAAEZ,SAAS,CAACkB,MAAM;IACvBP,MAAM,EAAEX,SAAS,CAACkB;EACpB,CAAC,CAAC,CACH,CAACC;AACJ,CAAC;AAED,eAAed,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}